

IDolgnost {
  idDolg: number
  sDolg: string
}

IDepartment {
  idDep: number
  sDDep: string
}

IRole {
  idRole: number
  sRole: string
}

IStatus {
  idStatus: number
  sStatus: string
  sComment: string
}

IRoom {
  idRoom: number
  sAddress: string
  sCabinet: string
  iSeatingPlaces: number
  bHasProjector: boolean
  bHasInternet: boolean
  status: IStatus
  dtInEnable: number            // timestamp
  bDel: boolean
}

IOrder {
  idOrder: number
  dtBegin: number            // timestamp
  dtEnd: number
  sComment: string
  iSeatingPlaces: number
  bHasProjector: boolean
  bHasInternet: boolean
  room: IRoom
  status: IStatus
  bDel: boolean
}

IUser {
  sFam: string
  sName: string
  sOtch: string
  sPhone: string
  sEmail: string
  dolg: IDolgnost
  dep: IDepartment
  role: IRole
  bDel: boolean
}

IPageRequest {
  iPage: number
  iCountOnPage: number
}

ILoginRequest {
  sEmail: string
  sPassw: string
}

ILoginResponse {
  sFam: string
  sName: string
  sOtch: string
  dolg: IDolgnost
  dep: IDepartment
  role: IRole
}

IRegisterUserRequest {
  sFam: string
  sName: string
  sOtch: string
  sPhone: string
  sEmail: string
  sPassw: string
  idDolg: number
  idDep: number
  idRole: number  	
}

RegisterUserResponse - успех если получен код ответа 200

IUserRequest {
  idUser: number
}

IUserResponse extends IUser {
	
}

IUserUpdateRequest extends IRegisterUserRequest {
  idUser: number
  bDel: boolean
}

UserUpdateResponse - успех если получен код ответа 200

IUserDeleteRequest {
  idUser: number
}

UserDeleteResponse - успех если получен код ответа 200

IUserFilters {
  deletedOnly: boolean		// true - вернуть только удалённые (заменить условие по умолчанию bDel == false на bDel == true)
  deletedAdd: boolean		// true - вернуть все (удалённые и не удалённые), отменяет условие по умолчанию bDel == false 
}

IUserListRequest extends IPageRequest {
  filters: IUserFilters
}

IUserListResponse = Array<IUser>

IDolgListResponse = Array<IDolgnost>

IDepListResponse = Array<IDepartment>

IRoleListResponse = Array<IRole>

IChangePasswRequest {
  sOldPassw: string
  sNewPassw: string
}

changePasswResponse - успех если получен код ответа 200

IProfileResponse extends IUser {

}

IRegisterOrderRequest {
  dtBegin: number            // timestamp
  dtEnd: number
  sComment: string
  iSeatingPlaces: number
  bHasProjector: boolean
  bHasInternet: boolean
  idRoom: number
}

RegisterOrderResponse - успех если получен код ответа 200

IOrderRequest {
  idOrder: number
}

IOrderResponse extends IOrder {

}

IOrderDeleteRequest {
  idOrder: number
}

OrderDeleteResponse - успех если получен код ответа 200

IOrderFilters {
  active: boolean           // true - вернуть активные (добавить в запрос status = на согласовании и согласованные + время окончания аренды ещё не истекло)
  rejected: boolean         // true - вернуть отклонённые (добавить в запрос status = отклонённые)
  deletedOnly: boolean		// true - вернуть только удалённые (заменить условие по умолчанию bDel == false на bDel == true)
  deletedAdd: boolean		// true - вернуть все (удалённые и не удалённые), отменяет условие по умолчанию bDel == false 
}

IOrderListRequest extends IPageRequest {
  filters: IOrderFilters
}

IOrderListResponse = Array<IOrder>

IOrderChangeStatusRequest {
  idOrder: number
  idStatus: number
}

OrderChangeStatusResponse - успех если получен код ответа 200

IRegisterRoomRequest {
  sAddress: string
  sCabinet: string
  iSeatingPlaces: number
  bHasProjector: boolean
  bHasInternet: boolean
  idStatus: number
  dtInEnable: number            // timestamp
}

RegisterRoomResponse - успех если получен код ответа 200

IRoomRequest {
  idRoom: number
}

IRoomResponse extends IRoom {

}

IRoomDeleteRequest {
  idOrder: number
}

RoomDeleteResponse - успех если получен код ответа 200

IRoomFilters {
  deletedOnly: boolean		// true - вернуть только удалённые (заменить условие по умолчанию bDel == false на bDel == true)
  deletedAdd: boolean		// true - вернуть все (удалённые и не удалённые), отменяет условие по умолчанию bDel == false 
}

IRoomListRequest extends IPageRequest {
  filters: IRoomFilters
}

IRoomListResponse = Array<IRoom>

