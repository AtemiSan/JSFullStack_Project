/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 06-??2023 20:41:06 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS DEPARTMENT CASCADE
;

DROP TABLE IF EXISTS DOLGNOST CASCADE
;

DROP TABLE IF EXISTS MEETING_ROOM CASCADE
;

DROP TABLE IF EXISTS ORDER_MEETING_ROOM CASCADE
;

DROP TABLE IF EXISTS ROLE CASCADE
;

DROP TABLE IF EXISTS STATUS CASCADE
;

DROP TABLE IF EXISTS "USER" CASCADE
;

/* Create Tables */

CREATE TABLE DEPARTMENT
(
	ID_DEP integer NOT NULL,
	S_DEP varchar(30) NOT NULL,
	DT_INS timestamp without time zone NOT NULL   DEFAULT CURRENT_TIMESTAMP,
	DT_UPD timestamp without time zone NULL,
	DT_DEL timestamp without time zone NULL
)
;

CREATE TABLE DOLGNOST
(
	ID_DOLG integer NOT NULL,
	S_DOLG varchar(30) NOT NULL,
	DT_INS timestamp without time zone NOT NULL   DEFAULT CURRENT_TIMESTAMP,
	DT_UPD timestamp without time zone NULL,
	DT_DEL timestamp without time zone NULL
)
;

CREATE TABLE MEETING_ROOM
(
	ID_ROOM integer NOT NULL,
	S_ADDRESS varchar(150) NOT NULL,    
	S_CABINET varchar(20) NOT NULL,
	I_SEATING_PLACES integer NOT NULL   DEFAULT 0,
	B_HAS_PROJECTOR smallint NOT NULL   DEFAULT 0,
	B_HAS_INTERNET smallint NOT NULL   DEFAULT 0,
	ID_STATUS smallint NOT NULL,
	DT_IN_ENABLE timestamp without time zone NULL,    
	DT_INS timestamp without time zone NOT NULL   DEFAULT CURRENT_TIMESTAMP,
	DT_UPD timestamp without time zone NULL,
	DT_DEL timestamp without time zone NULL
)
;

CREATE TABLE ORDER_MEETING_ROOM
(
	ID_ORDER integer NOT NULL,
	DT_BEGIN timestamp without time zone NOT NULL,
	DT_END timestamp without time zone NOT NULL,
	S_COMMENT varchar(255) NULL,
	I_SEATING_PLACES integer NOT NULL   DEFAULT 0,
	B_HAS_PROJECTOR smallint NOT NULL   DEFAULT 0,
	B_HAS_INTERNET smallint NOT NULL   DEFAULT 0,
	ID_USER integer NOT NULL,
	ID_ROOM integer NOT NULL,
	ID_STATUS smallint NOT NULL,
	ID_USER_AGREEMENT integer NULL,
	DT_INS timestamp without time zone NOT NULL   DEFAULT CURRENT_TIMESTAMP,
	DT_UPD timestamp without time zone NULL,
	DT_DEL timestamp without time zone NULL
)
;

CREATE TABLE ROLE
(
	ID_ROLE smallint NOT NULL,
	S_ROLE varchar(50) NOT NULL,
	DT_INS timestamp without time zone NOT NULL   DEFAULT CURRENT_TIMESTAMP,
	DT_UPD timestamp without time zone NULL,
	DT_DEL timestamp without time zone NULL
)
;

CREATE TABLE STATUS
(
	ID_STATUS smallint NOT NULL,
	S_STATUS varchar(30) NOT NULL,
	S_COMMENT varchar(200) NULL,
	DT_INS timestamp without time zone NOT NULL   DEFAULT CURRENT_TIMESTAMP,
	DT_UPD timestamp without time zone NULL,
	DT_DEL timestamp without time zone NULL
)
;

CREATE TABLE "USER"
(
	ID_USER integer NOT NULL,
	S_FAM varchar(50) NOT NULL,
	S_NAME varchar(50) NOT NULL,
	S_OTCH varchar(50) NULL,
	S_EMAIL varchar(50) NOT NULL,
	S_PASSW varchar(30) NOT NULL,
	S_PHONE varchar(11) NOT NULL,
	ID_DOLG integer NOT NULL,
	ID_DEP integer NOT NULL,
	ID_ROLE smallint NOT NULL,
	DT_INS timestamp without time zone NOT NULL   DEFAULT CURRENT_TIMESTAMP,
	DT_UPD timestamp without time zone NULL,
	DT_DEL timestamp without time zone NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE DEPARTMENT ADD CONSTRAINT PK_DEPARTMENT
	PRIMARY KEY (ID_DEP)
;

ALTER TABLE DOLGNOST ADD CONSTRAINT PK_DOLGNOST
	PRIMARY KEY (ID_DOLG)
;

ALTER TABLE MEETING_ROOM ADD CONSTRAINT PK_MEETING_ROOMS
	PRIMARY KEY (ID_ROOM)
;

CREATE INDEX IX_MR_B_DEL ON MEETING_ROOM ()
;

CREATE INDEX IXFK_MR_ID_STATUS ON MEETING_ROOM (ID_STATUS ASC)
;

ALTER TABLE ORDER_MEETING_ROOM ADD CONSTRAINT PK_ORDERS_MEETING_ROOMS
	PRIMARY KEY (ID_ORDER)
;

CREATE INDEX IXFK_OMR_ID_ROOM ON ORDER_MEETING_ROOM (ID_ROOM ASC)
;

CREATE INDEX IXFK_OMR_ID_STATUS ON ORDER_MEETING_ROOM (ID_STATUS ASC)
;

CREATE INDEX IXFK_OMR_ID_USERS ON ORDER_MEETING_ROOM (ID_USER ASC)
;

CREATE INDEX IX_OMR_B_DEL ON ORDER_MEETING_ROOM ()
;

ALTER TABLE ROLE ADD CONSTRAINT PK_ROLES
	PRIMARY KEY (ID_ROLE)
;

ALTER TABLE STATUS ADD CONSTRAINT PK_STATUS
	PRIMARY KEY (ID_STATUS)
;

ALTER TABLE "USER" ADD CONSTRAINT PK_USERS
	PRIMARY KEY (ID_USER)
;

CREATE INDEX IXFK_USERS_DEPARTMENT ON "USER" (ID_DEP ASC)
;

CREATE INDEX IXFK_USERS_DOLGNOST ON "USER" (ID_DOLG ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE MEETING_ROOM ADD CONSTRAINT FK_MR_STATUS
	FOREIGN KEY (ID_STATUS) REFERENCES STATUS (ID_STATUS) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE ORDER_MEETING_ROOM ADD CONSTRAINT FK_OMR_MR
	FOREIGN KEY (ID_ROOM) REFERENCES MEETING_ROOM (ID_ROOM) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE ORDER_MEETING_ROOM ADD CONSTRAINT FK_OMR_STATUS
	FOREIGN KEY (ID_STATUS) REFERENCES STATUS (ID_STATUS) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE ORDER_MEETING_ROOM ADD CONSTRAINT FK_OMR_USER_AGREEMENT
	FOREIGN KEY (ID_USER_AGREEMENT) REFERENCES "USER" (ID_USER) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE ORDER_MEETING_ROOM ADD CONSTRAINT FK_OMR_USERS
	FOREIGN KEY (ID_USER) REFERENCES "USER" (ID_USER) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "USER" ADD CONSTRAINT FK_USERS_DEPARTMENT
	FOREIGN KEY (ID_DEP) REFERENCES DEPARTMENT (ID_DEP) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "USER" ADD CONSTRAINT FK_USERS_DOLGNOST
	FOREIGN KEY (ID_DOLG) REFERENCES DOLGNOST (ID_DOLG) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "USER" ADD CONSTRAINT FK_USERS_ROLES
	FOREIGN KEY (ID_ROLE) REFERENCES ROLE (ID_ROLE) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

COMMENT ON COLUMN MEETING_ROOM.S_ADDRESS
	IS 'Адрес или наименование здания, если это промплощадка'
;

COMMENT ON COLUMN MEETING_ROOM.DT_IN_ENABLE
	IS 'Планируемая дата возврата в статус "Доступна", указывается при переключении в статус "Не доступна"'
;

COMMENT ON COLUMN ORDER_MEETING_ROOM.S_COMMENT
	IS 'Описание требований для подготовки переговорной'
;
